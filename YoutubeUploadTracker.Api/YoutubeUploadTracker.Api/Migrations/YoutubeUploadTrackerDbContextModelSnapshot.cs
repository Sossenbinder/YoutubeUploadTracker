// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using YoutubeUploadTracker.Api.Features.Common.Persistence;

#nullable disable

namespace YoutubeUploadTracker.Api.Migrations
{
    [DbContext(typeof(YoutubeUploadTrackerDbContext))]
    partial class YoutubeUploadTrackerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("YoutubeUploadTracker.Api.Features.Common.Persistence.Entity.UserYoutubeSubscriptionEntity", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<int>("YoutubeChannelId")
                        .HasMaxLength(256)
                        .HasColumnType("integer");

                    b.HasKey("UserId", "YoutubeChannelId");

                    b.HasIndex("UserId");

                    b.HasIndex("YoutubeChannelId");

                    b.ToTable("YoutubeSubscriptionEntities");
                });

            modelBuilder.Entity("YoutubeUploadTracker.Api.Features.Common.Persistence.Entity.YoutubeChannelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("Thumbnail240")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)");

                    b.Property<string>("Thumbnail800")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)");

                    b.Property<string>("Thumbnail88")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)");

                    b.HasKey("Id");

                    b.ToTable("YoutubeChannels");
                });

            modelBuilder.Entity("YoutubeUploadTracker.Api.Features.Common.Persistence.Entity.UserYoutubeSubscriptionEntity", b =>
                {
                    b.HasOne("YoutubeUploadTracker.Api.Features.Common.Persistence.Entity.YoutubeChannelEntity", "YoutubeChannel")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("YoutubeChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YoutubeChannel");
                });

            modelBuilder.Entity("YoutubeUploadTracker.Api.Features.Common.Persistence.Entity.YoutubeChannelEntity", b =>
                {
                    b.Navigation("UserSubscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
